{
    "id": "fe983448-e2ff-d578-f4c4-8223175c32c2",
    "name": "Webex Teams API",
    "description": "Hey there! Thanks for checking out Cisco Webex for Developers. If you've used Cisco Webex Meetings or Cisco Webex Teams (formerly Cisco Spark) you know how easy it is to meet and collaborate with your team members and customers.\r\n\r\nThe Webex for Developers program opens up the power behind the Webex platform to anyone seeking to extend the Webex experience.\r\n\r\nWebex Meetings is a powerful conferencing solution that lets you connect with anyone, anywhere, in real time. By combining video, audio and content sharing, Webex Meetings creates an effective conferencing environment, leading to more productive meetings and increased productivity. Developer information for Webex Meetings will soon be available on this site. In the meantime, to get started with developing for Webex Meetings, please see the Getting Started guides over on Cisco DevNet. Keep reading for information about Webex Teams.\r\n\r\nWebex Teams makes staying in sync with your teammates and customers easy.\r\nConversations in Webex Teams take place in virtual meeting rooms. Some rooms live for a few hours while others become permanent fixtures of your team's workflow with titles like Daily Standup or Build Status. Webex Teams allows conversations to flow seamlessly between messages, video calls, and real-time whiteboarding sessions. No other solution brings together so many facets of collaboration into a single unified platform.\r\n\r\nhttps:\/\/developer.webex.com\/getting-started.html",
    "auth": null,
    "events": [
        {
            "listen": "prerequest",
            "script": {
                "id": "46abc27d-2d4b-4ed4-b512-2815c272adf2",
                "type": "text\/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "id": "72153035-536a-4032-9953-ef5a9edde7d9",
                "type": "text\/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variables": null,
    "order": [],
    "folders_order": [
        "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
        "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
        "b0bda3b8-4f74-e53e-a6ab-5ddd07eac6a9",
        "270e50ef-c194-3a60-00ff-b9c0b99db32b",
        "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
        "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
        "e186555a-a3a2-bb43-59bf-ef566503d8df"
    ],
    "folders": [
        {
            "id": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "name": "Memberships",
            "description": "Memberships represent a person's relationship to a room. Use this API to list members of any room that you're in or create memberships to invite someone to a room. Memberships can also be updated to make someone a moderator or deleted to remove them from the room.\r\n\r\nJust like in the Webex Teams app, you must be a member of the room in order to list its memberships or invite people.\r\n\r\nhttps:\/\/developer.webex.com\/resource-memberships.html",
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "2cc3d2c1-27c3-4005-a00f-5f8125079a60",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "d344b3c6-5b68-45b7-953c-d465116e5ad6",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folder": null,
            "order": [
                "d1f99432-bc92-8dd6-5bd3-d5f6b3b8ffd4",
                "0e76ba7c-b79c-a9f3-c5a6-1dee681320bd",
                "5292effb-8a57-9964-13a1-ef6ec2e92bcd",
                "c9dc110d-d44b-42ec-fbcc-5e48f302ef1e",
                "12a84f64-ec9f-d75c-c8b8-869e0fe67e81",
                "76feb686-e609-ae56-66a8-874ed0e0c4db",
                "b878f55a-df7c-9d7a-a0f8-0d72f1baeee3",
                "64b8178b-deb1-60ee-509f-da6c9e1d824e"
            ],
            "folders_order": [],
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folderId": "c22ec2c6-1100-4f22-214b-cb867a5a2b41"
        },
        {
            "id": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "name": "Messages",
            "description": "Messages are how we communicate in a room. In Webex Teams, each message is displayed on its own line along with a timestamp and sender information. Use this API to list, create, and delete messages.\r\n\r\nMessage can contain plain text, rich text, and a file attachment.\r\n\r\nJust like in the Webex Teams app, you must be a member of the room in order to target it with this API.\r\n\r\nhttps:\/\/developer.webex.com\/resource-messages.html",
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "3af8d6cb-87a5-4d01-8f01-07a2ab92d236",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "87afc694-bb34-4ac1-8848-7ee4c5942395",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folder": null,
            "order": [
                "1797b0bc-0f44-41f1-1da2-d04b77cb3042",
                "f6d6e2c7-0e2a-a340-0c0d-69079f3779b0",
                "462dec44-92af-46e3-3982-aec238b524bb",
                "8f47bfa9-120e-f50f-ca49-285c6d3c40f8",
                "524f85a8-8ae3-5016-b50b-3dd8d7592716",
                "24af2ba6-9b4d-98d4-c2d5-68bf40b26e1a",
                "6a227825-5155-7c99-302f-331213969c21",
                "1d992df6-2e38-b935-7ea2-fc96dd01c7ab",
                "6da7dd9f-029b-ab64-b2c5-23bc3d76e3bc",
                "e0d208fb-7a43-128f-3819-82eee5af2f7a",
                "6149bc39-d4f5-5ce0-b111-f79052ca93be",
                "986be457-25a9-589b-6467-faaef2c0bdd8",
                "fd3f0b6b-9d10-016b-8f4f-5358d1fdf443",
                "18e21acf-9d81-7da9-73c0-f615621f1998",
                "4eafb8c8-627f-d0ee-4d5e-94d91f90ed26"
            ],
            "folders_order": [],
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folderId": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7"
        },
        {
            "id": "b0bda3b8-4f74-e53e-a6ab-5ddd07eac6a9",
            "name": "People",
            "description": "People are registered users of Webex Teams. Searching and viewing People requires an auth token with a scope of spark:people_read. Viewing the list of all People in your Organization requires an administrator auth token with spark-admin:people_read scope. Adding, updating, and removing People requires an administrator auth token with the spark-admin:people_write scope.\r\n\r\nTo learn more about managing people in a room see the Memberships API. For information about how to allocate Hybrid Services licenses to people, see the Managing Hybrid Services guide.\r\n\r\nhttps:\/\/developer.webex.com\/resource-people.html",
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "31ca6cec-fa5e-445c-a0ea-cce55b417369",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "47e69d59-1906-418b-a2a2-3dc1a332e80c",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folder": null,
            "order": [
                "b50ab3c8-47b3-42f5-059c-33732c67275f",
                "43a86f02-6da7-d6e3-992c-a26fe8acbeac",
                "876b01d9-ded3-a709-9c77-816a4ed9c6b1",
                "2785814d-2bca-40cc-e0b7-2d35feafbcb3"
            ],
            "folders_order": [],
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folderId": "b0bda3b8-4f74-e53e-a6ab-5ddd07eac6a9"
        },
        {
            "id": "270e50ef-c194-3a60-00ff-b9c0b99db32b",
            "name": "Rooms",
            "description": "Rooms are virtual meeting places where people post messages and collaborate to get work done. This API is used to manage the rooms themselves. Rooms are created and deleted with this API. You can also update a room to change its title, for example.\r\n\r\nTo create a team room, specify the a teamId in POST payload. Note that once a room is added to a team, it cannot be moved. To learn more about managing teams, see the Teams API.\r\n\r\nTo manage people in a room see the Memberships API.\r\n\r\nTo post content see the Messages API.\r\n\r\nhttps:\/\/developer.webex.com\/resource-rooms.html",
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "46bf1a47-401f-4c0d-8a7f-d255bd3dfb5e",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "59a42ebb-0590-444a-8b68-a220d52e2613",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folder": null,
            "order": [
                "e6afcb06-d7d0-6288-9532-c42210151d43",
                "9d3fca17-c59a-ee24-0fe9-e9e70cc8a259",
                "67aa9853-5b0e-0bb2-850e-6463d96a54dc",
                "d1bfa5f5-66b6-d459-65ed-ee6ba5956c31",
                "ae32bfd2-60bf-a04d-9248-3157e227698f",
                "5b487e0d-452c-d395-e127-ccd8ad549df1"
            ],
            "folders_order": [],
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folderId": "270e50ef-c194-3a60-00ff-b9c0b99db32b"
        },
        {
            "id": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "name": "Team Memberships",
            "description": "Team Memberships represent a person's relationship to a team. Use this API to list members of any team that you're in or create memberships to invite someone to a team. Team memberships can also be updated to make someone a moderator or deleted to remove them from the team.\r\n\r\nJust like in the Webex Teams app, you must be a member of the team in order to list its memberships or invite people..\r\n\r\nhttps:\/\/developer.webex.com\/resource-team-memberships.html",
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "0ba927fe-1baf-4939-8f91-56b395862b43",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "0555fb9f-e4fd-4714-ab59-b4ea55d6d7a7",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folder": null,
            "order": [
                "68398d42-a68d-52ea-a622-cc5a94899b53",
                "ea4a789e-cc8c-35f1-452b-0fbed661c4ae",
                "781eac98-7146-07be-4175-000302318d47",
                "cd66e806-eec1-d081-d64d-b13206ad4675",
                "5e158141-87f7-cd9d-d322-06741f418e42",
                "e050204b-171e-fa46-907f-c01b3f48a3e2",
                "80eefb51-4dc1-987f-2e40-0f7ddfdf7c37"
            ],
            "folders_order": [],
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folderId": "fca7a5be-0d35-7603-35ba-3a06267fa8d1"
        },
        {
            "id": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "name": "Teams",
            "description": "Teams are groups of people with a set of rooms that are visible to all members of that team. This API is used to manage the teams themselves. Teams are created and deleted with this API. You can also update a team to change its name, for example.\r\n\r\nTo manage people in a team see the Team Memberships API.\r\n\r\nTo manage team rooms see the Rooms API.\r\n\r\nhttps:\/\/developer.webex.com\/resource-teams.html",
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "ddbc4cd8-0716-459d-8bf9-ab19a6fc117d",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "b72acc1c-a92f-4c7a-8e2e-7605396532c4",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folder": null,
            "order": [
                "41622e2b-f603-5876-dfd3-917aedfa1223",
                "ae5f5759-e2c4-f117-25de-a4a6f6ebe03a",
                "64b2414d-ee15-684f-53af-5dab664f95ae",
                "9f32832b-98a8-4d8f-9207-6405988a330c",
                "575c5709-dbad-c616-94a3-61b7bcf93ab5",
                "7e89bf4b-b172-dd89-2a97-e1d019268bd9",
                "de2b73c7-04ba-a4fb-2a78-5b5466d8200e",
                "29444c88-2ccd-d32f-311d-ed4ac330c976",
                "cb053723-20a2-0618-b900-be7ee055b867",
                "b7f49e5e-dd54-b589-23f5-d70ec52c47f2"
            ],
            "folders_order": [],
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folderId": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9"
        },
        {
            "id": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "name": "WebHooks",
            "description": "Webhooks allow your app to be notified via HTTP when a specific event occurs in Webex Teams. For example, your app can register a webhook to be notified when a new message is posted into a specific room.\r\n\r\nEvents trigger in near real-time allowing your app and backend IT systems to stay in sync with new content and room activity.\r\n\r\nCheck the Webhooks Guide and our blog regularly for announcements of additional webhook resources and event types.\r\n\r\nhttps:\/\/developer.webex.com\/resource-webhooks.html",
            "auth": null,
            "events": [
                {
                    "listen": "prerequest",
                    "script": {
                        "id": "6a8c29b7-fafb-4cb3-ae75-c1047eeb15f1",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "id": "59f62c86-0e4d-4203-97b2-133ff9c9ee56",
                        "type": "text\/javascript",
                        "exec": [
                            ""
                        ]
                    }
                }
            ],
            "collection": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folder": null,
            "order": [
                "27dc4edd-07a7-2b23-b18e-6a1bcf818c30",
                "0e40dde2-6b2c-c644-2530-f14e04e7e327",
                "762e6433-08d1-647b-1a2a-9611bc87dae3",
                "baa17b72-ef75-d7a7-09ba-ee04a75c6fc3",
                "5b4b2dc7-df1c-f499-f672-53547f1425cc",
                "d13a66fb-8b30-1dae-4414-fe7eb0887420",
                "503312d9-6a27-963a-17e8-b271dd8dee54",
                "512c4b6a-09c6-039d-0084-5f018c2f069a",
                "8bf16795-49dd-8f90-1d01-333147569a37",
                "5f0b1a41-7537-47e3-6d39-d80dd8154ce3",
                "69725772-023c-8951-e4e7-8d9ec8aa20ce",
                "3513d4f1-0f04-759a-d27e-745ae613822a"
            ],
            "folders_order": [],
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "folderId": "e186555a-a3a2-bb43-59bf-ef566503d8df"
        }
    ],
    "requests": [
        {
            "id": "0e40dde2-6b2c-c644-2530-f14e04e7e327",
            "name": "Create a webhook (all events, all rooms)",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks",
            "description": "Creates a webhook for messages\/created event.\n\nNote that you'll need to change the requestb.in URI to your own to see the webhook in action.\n\nhttps:\/\/developer.webex.com\/endpoint-webhooks-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a webhook: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a webhook: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a webhook: cannot retreive webhook identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var webhookID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_webhook\", webhookID);",
                            "        tests[\"Create a webhook: created with id:\" + webhookID] = true",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a webhook: failed\"] = false\n}\nelse {\n    tests[\"Create a webhook: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a webhook: cannot retreive webhook identifier\"] = false\n    }\n    else {\n        var webhookID = jsonData.id;\n        postman.setEnvironmentVariable(\"_webhook\", webhookID);\n        tests[\"Create a webhook: created with id:\" + webhookID] = true\n    }\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n      \"name\": \"Webhook to Requestb.in (all events, no filter)\",\n      \"resource\": \"all\",\n      \"event\": \"all\",\n      \"targetUrl\": \"https:\/\/requestbin.herokuapp.com\/13f99fq1\"\n    }",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "0e76ba7c-b79c-a9f3-c5a6-1dee681320bd",
            "name": "Create a room (for test run purpose)",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms",
            "description": "Creates a room. The authenticated user is automatically added as a member of the room. See the Memberships API to learn how to add more people to the room.\n\nhttps:\/\/developer.webex.com\/endpoint-rooms-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a room: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a room: cannot retreive room identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var roomID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_room\", roomID);",
                            "        tests[\"Create a room: created with id:\" + roomID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a room: failed\"] = false\n}\nelse {\n    tests[\"Create a room: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a room: cannot retreive room identifier\"] = false\n    }\n    else {\n        var roomID = jsonData.id;\n        postman.setEnvironmentVariable(\"_room\", roomID);\n        tests[\"Create a room: created with id:\" + roomID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"title\": \"Postman - Testing Memberships\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "12a84f64-ec9f-d75c-c8b8-869e0fe67e81",
            "name": "Get membership details",
            "url": "https:\/\/api.ciscospark.com\/v1\/memberships\/{{_membership}}",
            "description": "Get details for a membership by ID.\r\n\r\nSpecify the membership ID in the membershipId URI parameter.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-memberships-membershipId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get membership details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get membership details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get membership details: cannot retreive identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var membershipID = jsonData.id;",
                            "        if (membershipID != postman.getEnvironmentVariable(\"_membership\")) {",
                            "            tests[\"Get membership details: wrong id:\" + membershipID] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get membership details: correct id:\" + membershipID] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get membership details: failed\"] = false;\n}\nelse {\n    tests[\"Get membership details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get membership details: cannot retreive identifier\"] = false;\n    }\n    else {\n        var membershipID = jsonData.id;\n        if (membershipID != postman.getEnvironmentVariable(\"_membership\")) {\n            tests[\"Get membership details: wrong id:\" + membershipID] = false;\n        }\n        else {\n            tests[\"Get membership details: correct id:\" + membershipID] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "1797b0bc-0f44-41f1-1da2-d04b77cb3042",
            "name": "Create a room (for test run purpose)",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms",
            "description": "Creates a room. The authenticated user is automatically added as a member of the room. See the Memberships API to learn how to add more people to the room.\n\nhttps:\/\/developer.webex.com\/endpoint-rooms-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a room: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a room: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var roomID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_room\", roomID);",
                            "        tests[\"Create a room: created with id:\" + roomID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a room: failed\"] = false\n}\nelse {\n    tests[\"Create a room: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a room: cannot retreive identifier\"] = false\n    }\n    else {\n        var roomID = jsonData.id;\n        postman.setEnvironmentVariable(\"_room\", roomID);\n        tests[\"Create a room: created with id:\" + roomID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"title\": \"Postman - Testing Messages\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "18e21acf-9d81-7da9-73c0-f615621f1998",
            "name": "Delete a message",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages\/{{_message}}",
            "description": "Deletes a message, by message ID.\n\nSpecify the message ID in the messageId parameter in the URI.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-messageId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a message: success\"] = true",
                            "}",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a message: failed\"] = false\n}\nelse {\n    tests[\"Delete a message: success\"] = true\n}\n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "1d992df6-2e38-b935-7ea2-fc96dd01c7ab",
            "name": "Create a message (7439 characters limit)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n  \"roomId\": \"{{_room}}\",\n  \"markdown\": \"ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "24af2ba6-9b4d-98d4-c2d5-68bf40b26e1a",
            "name": "Create a message (markdown)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nTo get more info about message formatting, check https:\/\/developer.webex.com\/formatting-messages.html\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"markdown\" : \"# Message Formatting!\\nWebex Teams clients now render rich text; enabling bots and integrations to communicate business data in a way that's fun to read and easy on the eyes!\\n\\n## Styling Text\\nMessages are styled using [Markdown](https:\/\/daringfireball.net\/projects\/markdown\/syntax) syntax allowing text to be emphasized in **bold**, *italics* on `in-line code`.\\n\\n### Fenced Code Blocks\\nWebex can now also render fenced code blocks using triple backticks (aka GitHub Flavored Markdown)\\n\\n```\\nsource 'https:\/\/github.com\/CocoaPods\/Specs.git'\\nplatform :ios, '8.0'\\nuse_frameworks!\\n\\npost_install do |installer|\\n  installer.pods_project.targets.each do |target|\\n    target.build_configurations.each do |config|\\n      config.build_settings['ENABLE_BITCODE'] = 'NO'\\n    end\\n  end\\nend\\n\\ntarget 'TeamsBnB' do\\n  pod 'TeamsSDK', :path => '..\/'\\n  pod 'Toast-Swift', '~> 1.1.0'\\nend\\n```\\n\\n### Lists\\n\\nLists are a great way to organize information or present options to your audience.\\n\\n###Ordered Lists\\n1. List Item\\n2. List Item\\n3. List Item\\n\\n###Unordered Lists\\n* List Item\\n* List Item\\n* List Item\\n     * Sub Item\\n         * SubSub Item\\n\\n### Block Quotes\\n\\n> Quoting is a super powerful way for bots to respond to a message that happened a while back in the conversation.\\n\\n\",\r\n  \"text\": \"This text would be displayed by Webex Teams clients that do not support markdown.\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "2785814d-2bca-40cc-e0b7-2d35feafbcb3",
            "name": "Get person details (me)",
            "url": "https:\/\/api.ciscospark.com\/v1\/people\/me",
            "description": "Show the profile for the authenticated user.\n\nhttps:\/\/developer.webex.com\/endpoint-people-me-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get person details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get person details: success\"] = true;",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "b0bda3b8-4f74-e53e-a6ab-5ddd07eac6a9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get person details: failed\"] = false;\n}\nelse {\n    tests[\"Get person details: success\"] = true;\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "27dc4edd-07a7-2b23-b18e-6a1bcf818c30",
            "name": "List webhooks",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks",
            "description": "Lists all of your webhooks.\n\nhttps:\/\/developer.webex.com\/endpoint-webhooks-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "29444c88-2ccd-d32f-311d-ed4ac330c976",
            "name": "Update a Team room",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Updates details for a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-put.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Update a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Update a room: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Update a room: failed\"] = false\n}\nelse {\n    tests[\"Update a room: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"title\": \"Cisco Live - Let's meet in the DevNet Zone\", \n    \"isLocked\": false\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "3513d4f1-0f04-759a-d27e-745ae613822a",
            "name": "Delete a room (cleanup)",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Deletes a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a room: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a room: failed\"] = false\n}\nelse {\n    tests[\"Delete a room: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "41622e2b-f603-5876-dfd3-917aedfa1223",
            "name": "List teams",
            "url": "https:\/\/api.ciscospark.com\/v1\/teams",
            "description": "List teams.\n\nhttps:\/\/developer.webex.com\/endpoint-teams-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List teams: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List teams: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List teams: failed\"] = false;\n}\nelse {\n    tests[\"List teams: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "43a86f02-6da7-d6e3-992c-a26fe8acbeac",
            "name": "List people (with exact email)",
            "url": "https:\/\/api.ciscospark.com\/v1\/people?email=toEnglish@sparkbot.io",
            "description": "List people in your organization.\n\nhttps:\/\/developer.webex.com\/endpoint-people-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "email",
                    "value": "toEnglish@sparkbot.io",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List people: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List people: success\"] = true;",
                            "    ",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.items === undefined) {",
                            "        tests[\"List people: cannot retreive result\"] = false",
                            "    }",
                            "    else {",
                            "        var personID = jsonData.items[0].id;",
                            "        postman.setEnvironmentVariable(\"_person\", personID);",
                            "        tests[\"List people: retreived with id:\" + personID] = true",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "b0bda3b8-4f74-e53e-a6ab-5ddd07eac6a9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List people: failed\"] = false;\n}\nelse {\n    tests[\"List people: success\"] = true;\n    \n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.items === undefined) {\n        tests[\"List people: cannot retreive result\"] = false\n    }\n    else {\n        var personID = jsonData.items[0].id;\n        postman.setEnvironmentVariable(\"_person\", personID);\n        tests[\"List people: retreived with id:\" + personID] = true\n    }\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "462dec44-92af-46e3-3982-aec238b524bb",
            "name": "Create a message (plain text)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"text\" : \"hi from Postman\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "4eafb8c8-627f-d0ee-4d5e-94d91f90ed26",
            "name": "Delete a room (cleanup)",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Deletes a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a room: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a room: failed\"] = false\n}\nelse {\n    tests[\"Delete a room: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "503312d9-6a27-963a-17e8-b271dd8dee54",
            "name": "Get webhook details",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks\/{{_webhook}}",
            "description": "Shows details for a webhook, by ID.\r\n\r\nSpecify the webhook ID in the webhookId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-webhooks-webhookId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get webhook details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get webhook details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get webhook details: cannot retreive webhook identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var webhookID = jsonData.id;",
                            "        if (webhookID != postman.getEnvironmentVariable(\"_webhook\")) {",
                            "            tests[\"Get webhook details: wrong id:\" + webhookID] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get webhook details: correct id:\" + webhookID] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get webhook details: failed\"] = false;\n}\nelse {\n    tests[\"Get webhook details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get webhook details: cannot retreive webhook identifier\"] = false;\n    }\n    else {\n        var webhookID = jsonData.id;\n        if (webhookID != postman.getEnvironmentVariable(\"_webhook\")) {\n            tests[\"Get webhook details: wrong id:\" + webhookID] = false;\n        }\n        else {\n            tests[\"Get webhook details: correct id:\" + webhookID] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "512c4b6a-09c6-039d-0084-5f018c2f069a",
            "name": "Update a webhook",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks\/{{_webhook}}",
            "description": "Updates a webhook, by ID.\r\n\r\nSpecify the webhook ID in the webhookId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-webhooks-webhookId-put.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Update a webhook: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Update a webhook: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Update a webhook: failed\"] = false\n}\nelse {\n    tests[\"Update a webhook: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"Postman WebHook Test (renamed)\",\n    \"targetUrl\": \"http:\/\/requestb.in\/pq8idjpq\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "524f85a8-8ae3-5016-b50b-3dd8d7592716",
            "name": "Create a message (plain text as form-urlencoded)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [
                {
                    "key": "roomId",
                    "value": "{{_room}}",
                    "description": "",
                    "type": "text",
                    "enabled": true
                },
                {
                    "key": "text",
                    "value": "This is a plain text message, sent via form-urlencoded",
                    "description": "",
                    "type": "text",
                    "enabled": true
                }
            ],
            "dataMode": "urlencoded",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/x-www-form-urlencoded",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/x-www-form-urlencoded\n",
            "pathVariables": []
        },
        {
            "id": "5292effb-8a57-9964-13a1-ef6ec2e92bcd",
            "name": "List memberships (for a room)",
            "url": "https:\/\/api.ciscospark.com\/v1\/memberships?roomId={{_room}}&max=100",
            "description": "Lists all room memberships. By default, lists memberships for rooms to which the authenticated user belongs.\n\nUse query parameters to filter the response.\n\nUse roomId to list memberships for a room, by ID.\n\nUse either personId or personEmail to filter the results.\n\nhttps:\/\/developer.webex.com\/endpoint-memberships-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "roomId",
                    "value": "{{_room}}",
                    "equals": true,
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "max",
                    "value": "100",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List rooms: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List rooms: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List rooms: failed\"] = false;\n}\nelse {\n    tests[\"List rooms: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "575c5709-dbad-c616-94a3-61b7bcf93ab5",
            "name": "List Team rooms",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms?teamId={{_team}}",
            "description": "List rooms.\r\n\r\nBy default, lists rooms to which the authenticated user belongs.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "teamId",
                    "value": "{{_team}}",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List rooms: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List rooms: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List rooms: failed\"] = false;\n}\nelse {\n    tests[\"List rooms: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "5b487e0d-452c-d395-e127-ccd8ad549df1",
            "name": "Delete a room",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Deletes a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a room: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "270e50ef-c194-3a60-00ff-b9c0b99db32b",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a room: failed\"] = false\n}\nelse {\n    tests[\"Delete a room: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "5b4b2dc7-df1c-f499-f672-53547f1425cc",
            "name": "Create a room (for test run purpose)",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms",
            "description": "Creates a room. The authenticated user is automatically added as a member of the room. See the Memberships API to learn how to add more people to the room.\n\nhttps:\/\/developer.webex.com\/endpoint-rooms-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a room: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a room: cannot retreive room identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var roomID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_room\", roomID);",
                            "        tests[\"Create a room: created with id:\" + roomID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a room: failed\"] = false\n}\nelse {\n    tests[\"Create a room: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a room: cannot retreive room identifier\"] = false\n    }\n    else {\n        var roomID = jsonData.id;\n        postman.setEnvironmentVariable(\"_room\", roomID);\n        tests[\"Create a room: created with id:\" + roomID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"title\": \"Postman - Testing Webhooks\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "5e158141-87f7-cd9d-d322-06741f418e42",
            "name": "Update a team membership",
            "url": "https:\/\/api.ciscospark.com\/v1\/team\/memberships\/{{_membership}}",
            "description": "Updates properties for a membership by ID.\n\nSpecify the membership ID in the membershipId URI parameter.\n\nhttps:\/\/developer.webex.com\/endpoint-teammemberships-membershipId-put.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Update a membership: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Update a membership: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Update a membership: failed\"] = false\n}\nelse {\n    tests[\"Update a membership: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n  \"isModerator\": true\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "5f0b1a41-7537-47e3-6d39-d80dd8154ce3",
            "name": "Check requestb.in (test purpose)",
            "url": "https:\/\/requestbin.herokuapp.com\/13f99fq1?inspect",
            "description": "check an event has been posted",
            "data": [],
            "dataMode": "raw",
            "headerData": [],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "inspect",
                    "value": "",
                    "equals": false,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n  \"name\": \"SparkBot-Starter-Kit\",\n  \"resource\": \"messages\",\n  \"event\": \"created\",\n  \"targetUrl\": \"https:\/\/sparkbot.localtunnel.me\/webhook\",\n  \"filter\": \"roomId=Y2lzY29zcGFyazovL3VzL1JPT00vZjIyNzgyZDAtMTY3MS0xMWU2LWIyNTctN2Q1MjY5NGQwOGI2\"\n}",
            "headers": "",
            "pathVariables": []
        },
        {
            "id": "6149bc39-d4f5-5ce0-b111-f79052ca93be",
            "name": "Create a message (file attachment)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"text\" : \"Learn Webex API with DevNet\",\r\n  \"files\" : [ \"https:\/\/cdn-images-1.medium.com\/max\/1000\/1*_Iz0gkpIJ8KxxR5Jk0XJjQ.png\" ]\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "64b2414d-ee15-684f-53af-5dab664f95ae",
            "name": "Get team details",
            "url": "https:\/\/api.ciscospark.com\/v1\/teams\/{{_team}}",
            "description": "Show details for a team.\n\nhttps:\/\/developer.webex.com\/endpoint-teams-teamId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get team details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get team details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get team details: cannot retreive team identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var teamID = jsonData.id;",
                            "        if (teamID != postman.getEnvironmentVariable(\"_team\")) {",
                            "            tests[\"Get team details: wrong id:\" + teamID] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get team details: correct id:\" + teamID] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get team details: failed\"] = false;\n}\nelse {\n    tests[\"Get team details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get team details: cannot retreive team identifier\"] = false;\n    }\n    else {\n        var teamID = jsonData.id;\n        if (teamID != postman.getEnvironmentVariable(\"_team\")) {\n            tests[\"Get team details: wrong id:\" + teamID] = false;\n        }\n        else {\n            tests[\"Get team details: correct id:\" + teamID] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "64b8178b-deb1-60ee-509f-da6c9e1d824e",
            "name": "Delete a room (cleanup)",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Deletes a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a room: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a room: failed\"] = false\n}\nelse {\n    tests[\"Delete a room: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "67aa9853-5b0e-0bb2-850e-6463d96a54dc",
            "name": "Create a room",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms",
            "description": "Creates a room. The authenticated user is automatically added as a member of the room. See the Memberships API to learn how to add more people to the room.\n\nhttps:\/\/developer.webex.com\/endpoint-rooms-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a room: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a room: cannot retreive room identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var roomID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_room\", roomID);",
                            "        tests[\"Create a room: created with id:\" + roomID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "270e50ef-c194-3a60-00ff-b9c0b99db32b",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a room: failed\"] = false\n}\nelse {\n    tests[\"Create a room: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a room: cannot retreive room identifier\"] = false\n    }\n    else {\n        var roomID = jsonData.id;\n        postman.setEnvironmentVariable(\"_room\", roomID);\n        tests[\"Create a room: created with id:\" + roomID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"title\": \"Postman - Testing Rooms\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "68398d42-a68d-52ea-a622-cc5a94899b53",
            "name": "Create a team (for test run purpose)",
            "url": "https:\/\/api.ciscospark.com\/v1\/teams",
            "description": "Create a new team.\n\nhttps:\/\/developer.webex.com\/endpoint-teams-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a team: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a team: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a team: cannot retreive team identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var teamID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_team\", teamID);",
                            "        tests[\"Create a team: created with id:\" + teamID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a team: failed\"] = false\n}\nelse {\n    tests[\"Create a team: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a team: cannot retreive team identifier\"] = false\n    }\n    else {\n        var teamID = jsonData.id;\n        postman.setEnvironmentVariable(\"_team\", teamID);\n        tests[\"Create a team: created with id:\" + teamID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"Tour de France\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "69725772-023c-8951-e4e7-8d9ec8aa20ce",
            "name": "Delete a webhook",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks\/{{_webhook}}",
            "description": "Deletes a webhook, by ID.\r\n\r\nSpecify the webhook ID in the webhookId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-webhooks-delete.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "6a227825-5155-7c99-302f-331213969c21",
            "name": "Create a message (with mention)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.ciscospark.com\/endpoint-messages-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"markdown\" : \"Hi <@personEmail:CiscoDevNet@sparkbot.io|CiscoDevNet>, your order has been processed.\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "6da7dd9f-029b-ab64-b2c5-23bc3d76e3bc",
            "name": "Create a message (2479 asian characters)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"markdown\" : \"\u6f22\u5b57\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u6f22\u5b57\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u6f22\u5b57\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u6f22\u5b57\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\u3092\u6f22\u5b57\u3067\u9001\u308a\u307e\u3059\u3053\u3093\u306b\u3061\u306f\u65e5\u672c\u8a9e\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "762e6433-08d1-647b-1a2a-9611bc87dae3",
            "name": "Get webhook details",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks\/{{_webhook}}",
            "description": "Shows details for a webhook, by ID.\r\n\r\nSpecify the webhook ID in the webhookId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-webhooks-webhookId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get webhook details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get webhook details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get webhook details: cannot retreive webhook identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var webhookID = jsonData.id;",
                            "        if (webhookID != postman.getEnvironmentVariable(\"_webhook\")) {",
                            "            tests[\"Get webhook details: wrong id:\" + webhookID] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get webhook details: correct id:\" + webhookID] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get webhook details: failed\"] = false;\n}\nelse {\n    tests[\"Get webhook details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get webhook details: cannot retreive webhook identifier\"] = false;\n    }\n    else {\n        var webhookID = jsonData.id;\n        if (webhookID != postman.getEnvironmentVariable(\"_webhook\")) {\n            tests[\"Get webhook details: wrong id:\" + webhookID] = false;\n        }\n        else {\n            tests[\"Get webhook details: correct id:\" + webhookID] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "76feb686-e609-ae56-66a8-874ed0e0c4db",
            "name": "Update a membership",
            "url": "https:\/\/api.ciscospark.com\/v1\/memberships\/{{_membership}}",
            "description": "Updates properties for a membership by ID.\n\nSpecify the membership ID in the membershipId URI parameter.\n\nhttps:\/\/developer.ciscospark.com\/endpoint-memberships-membershipId-put.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Update a membership: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Update a membership: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Update a membership: failed\"] = false\n}\nelse {\n    tests[\"Update a membership: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n  \"isModerator\": true\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "781eac98-7146-07be-4175-000302318d47",
            "name": "Create a team membership",
            "url": "https:\/\/api.ciscospark.com\/v1\/team\/memberships",
            "description": "Add someone to a team by Person ID or email address; optionally making them a moderator.\n\nhttps:\/\/developer.webex.com\/endpoint-teammemberships-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a membership: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a membership: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a membership: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var membershipID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_membership\", membershipID);",
                            "        tests[\"Create a membership: created with id:\" + membershipID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a membership: failed\"] = false\n}\nelse {\n    tests[\"Create a membership: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a membership: cannot retreive identifier\"] = false\n    }\n    else {\n        var membershipID = jsonData.id;\n        postman.setEnvironmentVariable(\"_membership\", membershipID);\n        tests[\"Create a membership: created with id:\" + membershipID] = true\n    }\n}\n    \n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"teamId\" : \"{{_team}}\",\r\n  \"personEmail\": \"steve.sfartz@gmail.com\",\r\n  \"isModerator\": \"false\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "7e89bf4b-b172-dd89-2a97-e1d019268bd9",
            "name": "Create a Team room",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms",
            "description": "Creates a room. The authenticated user is automatically added as a member of the room. See the Memberships API to learn how to add more people to the room.\n\nhttps:\/\/developer.webex.com\/endpoint-rooms-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a room: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a room: cannot retreive room identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var roomID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_room\", roomID);",
                            "        tests[\"Create a room: created with id:\" + roomID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a room: failed\"] = false\n}\nelse {\n    tests[\"Create a room: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a room: cannot retreive room identifier\"] = false\n    }\n    else {\n        var roomID = jsonData.id;\n        postman.setEnvironmentVariable(\"_room\", roomID);\n        tests[\"Create a room: created with id:\" + roomID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"title\": \"Postman - Testing Teams\",\n    \"teamId\": \"{{_team}}\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "80eefb51-4dc1-987f-2e40-0f7ddfdf7c37",
            "name": "Delete a team (cleanup)",
            "url": "https:\/\/api.ciscospark.com\/v1\/teams\/{{_team}}",
            "description": "Delete a team.\n\nhttps:\/\/developer.webex.com\/endpoint-teams-teamId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a team: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a team: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a team: failed\"] = false\n}\nelse {\n    tests[\"Delete a team: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "876b01d9-ded3-a709-9c77-816a4ed9c6b1",
            "name": "Get person details",
            "url": "https:\/\/api.ciscospark.com\/v1\/people\/{{_person}}",
            "description": "Shows details for a person, by ID.\r\n\r\nSpecify the person ID in the personId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-people-personId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get person details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get person details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get person details: cannot retreive person identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var personID = jsonData.id;",
                            "        if (personID != postman.getEnvironmentVariable(\"_person\")) {",
                            "            tests[\"Get person details: wrong id:\" + personID] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get person details: correct id:\" + personID] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "b0bda3b8-4f74-e53e-a6ab-5ddd07eac6a9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get person details: failed\"] = false;\n}\nelse {\n    tests[\"Get person details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get person details: cannot retreive person identifier\"] = false;\n    }\n    else {\n        var personID = jsonData.id;\n        if (personID != postman.getEnvironmentVariable(\"_person\")) {\n            tests[\"Get person details: wrong id:\" + personID] = false;\n        }\n        else {\n            tests[\"Get person details: correct id:\" + personID] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "8bf16795-49dd-8f90-1d01-333147569a37",
            "name": "Add a message (for test run purpose)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "adds a message in a room, to check an event is triggered",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"text\" : \"This is a plain text message to read from the webhook\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "8f47bfa9-120e-f50f-ca49-285c6d3c40f8",
            "name": "Create a message (plain text as form-data)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [
                {
                    "key": "roomId",
                    "value": "{{_room}}",
                    "type": "text",
                    "enabled": true
                },
                {
                    "key": "text",
                    "value": "This is a plain text message, sent as form-data",
                    "type": "text",
                    "enabled": true
                }
            ],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "986be457-25a9-589b-6467-faaef2c0bdd8",
            "name": "Create a message (local file attachement)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "Posts a plain text or markdown message, and optionally, a media content attachment, to a room.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [
                {
                    "key": "roomId",
                    "value": "{{_room}}",
                    "type": "text",
                    "enabled": true
                },
                {
                    "key": "text",
                    "value": "This is a message with file attachment",
                    "type": "text",
                    "enabled": true
                },
                {
                    "key": "files",
                    "value": "",
                    "type": "file",
                    "enabled": true
                }
            ],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "9d3fca17-c59a-ee24-0fe9-e9e70cc8a259",
            "name": "List rooms (direct)",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms?type=direct&sortBy=lastactivity&max=10",
            "description": "List rooms.\r\n\r\nBy default, lists rooms to which the authenticated user belongs.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "value": "direct",
                    "equals": true,
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "sortBy",
                    "value": "lastactivity",
                    "equals": true,
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "max",
                    "value": "10",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List rooms: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List rooms: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "270e50ef-c194-3a60-00ff-b9c0b99db32b",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List rooms: failed\"] = false;\n}\nelse {\n    tests[\"List rooms: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "9f32832b-98a8-4d8f-9207-6405988a330c",
            "name": "Update a team",
            "url": "https:\/\/api.ciscospark.com\/v1\/teams\/{{_team}}",
            "description": "Update a team.\n\nhttps:\/\/developer.webex.com\/endpoint-teams-teamId-put.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Update a team: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Update a team: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Update a team: failed\"] = false\n}\nelse {\n    tests[\"Update a team: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2018\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "ae32bfd2-60bf-a04d-9248-3157e227698f",
            "name": "Update a room",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Updates details for a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-put.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "PUT",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Update a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Update a room: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "270e50ef-c194-3a60-00ff-b9c0b99db32b",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Update a room: failed\"] = false\n}\nelse {\n    tests[\"Update a room: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"title\": \"Cisco Live - Let's meet in the DevNet Zone\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "ae5f5759-e2c4-f117-25de-a4a6f6ebe03a",
            "name": "Create a team",
            "url": "https:\/\/api.ciscospark.com\/v1\/teams",
            "description": "Create a new team.\n\nhttps:\/\/developer.webex.com\/endpoint-teams-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a team: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a team: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a team: cannot retreive team identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var teamID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_team\", teamID);",
                            "        tests[\"Create a team: created with id:\" + teamID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a team: failed\"] = false\n}\nelse {\n    tests[\"Create a team: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a team: cannot retreive team identifier\"] = false\n    }\n    else {\n        var teamID = jsonData.id;\n        postman.setEnvironmentVariable(\"_team\", teamID);\n        tests[\"Create a team: created with id:\" + teamID] = true\n    }\n}\n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "b50ab3c8-47b3-42f5-059c-33732c67275f",
            "name": "List people (whose name starts with)",
            "url": "https:\/\/api.ciscospark.com\/v1\/people?displayName=Ste",
            "description": "List people in your organization.\n\nhttps:\/\/developer.webex.com\/endpoint-people-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "displayName",
                    "value": "Ste",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List people: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List people: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "b0bda3b8-4f74-e53e-a6ab-5ddd07eac6a9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List people: failed\"] = false;\n}\nelse {\n    tests[\"List people: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "b7f49e5e-dd54-b589-23f5-d70ec52c47f2",
            "name": "Delete a team ",
            "url": "https:\/\/api.ciscospark.com\/v1\/teams\/{{_team}}",
            "description": "Delete a team.\n\nhttps:\/\/developer.webex.com\/endpoint-teams-teamId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a team: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a team: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a team: failed\"] = false\n}\nelse {\n    tests[\"Delete a team: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "b878f55a-df7c-9d7a-a0f8-0d72f1baeee3",
            "name": "Delete membership",
            "url": "https:\/\/api.ciscospark.com\/v1\/memberships\/{{_membership}}",
            "description": "Deletes a membership by ID.\r\n\r\nSpecify the membership ID in the membershipId URI parameter.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-memberships-membershipId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a membership: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a membership: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a membership: failed\"] = false\n}\nelse {\n    tests[\"Delete a membership: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "baa17b72-ef75-d7a7-09ba-ee04a75c6fc3",
            "name": "Delete a webhook",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks\/{{_webhook}}",
            "description": "Deletes a webhook, by ID.\r\n\r\nSpecify the webhook ID in the webhookId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-webhooks-delete.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "c9dc110d-d44b-42ec-fbcc-5e48f302ef1e",
            "name": "Create a membership",
            "url": "https:\/\/api.ciscospark.com\/v1\/memberships",
            "description": "Add someone to a room by Person ID or email address; optionally making them a moderator.\n\nhttps:\/\/developer.webex.com\/endpoint-memberships-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a membership: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a membership: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a membership: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var membershipID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_membership\", membershipID);",
                            "        tests[\"Create a membership: created with id:\" + membershipID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a membership: failed\"] = false\n}\nelse {\n    tests[\"Create a membership: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a membership: cannot retreive identifier\"] = false\n    }\n    else {\n        var membershipID = jsonData.id;\n        postman.setEnvironmentVariable(\"_membership\", membershipID);\n        tests[\"Create a membership: created with id:\" + membershipID] = true\n    }\n}\n    \n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"personEmail\": \"CiscoDevNet@sparkbot.io\",\r\n  \"isModerator\": \"false\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "cb053723-20a2-0618-b900-be7ee055b867",
            "name": "Delete a Team room",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Deletes a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a room: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a room: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a room: failed\"] = false\n}\nelse {\n    tests[\"Delete a room: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "cd66e806-eec1-d081-d64d-b13206ad4675",
            "name": "Get team membership details",
            "url": "https:\/\/api.ciscospark.com\/v1\/team\/memberships\/{{_membership}}",
            "description": "Get details for a membership by ID.\r\n\r\nSpecify the membership ID in the membershipId URI parameter.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-teammemberships-membershipId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get membership details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get membership details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get membership details: cannot retreive identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var membershipID = jsonData.id;",
                            "        if (membershipID != postman.getEnvironmentVariable(\"_membership\")) {",
                            "            tests[\"Get membership details: wrong id:\" + membershipID] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get membership details: correct id:\" + membershipID] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get membership details: failed\"] = false;\n}\nelse {\n    tests[\"Get membership details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get membership details: cannot retreive identifier\"] = false;\n    }\n    else {\n        var membershipID = jsonData.id;\n        if (membershipID != postman.getEnvironmentVariable(\"_membership\")) {\n            tests[\"Get membership details: wrong id:\" + membershipID] = false;\n        }\n        else {\n            tests[\"Get membership details: correct id:\" + membershipID] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "d13a66fb-8b30-1dae-4414-fe7eb0887420",
            "name": "Create a webhook (messages\/created)",
            "url": "https:\/\/api.ciscospark.com\/v1\/webhooks\/",
            "description": "Creates a webhook for messages\/created event.\n\nNote that you'll need to change the requestb.in URI to your own to see the webhook in action.\n\nhttps:\/\/developer.webex.com\/endpoint-webhooks-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a webhook: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a webhook: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a webhook: cannot retreive webhook identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var webhookID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_webhook\", webhookID);",
                            "        tests[\"Create a webhook: created with id:\" + webhookID] = true",
                            "    }",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "e186555a-a3a2-bb43-59bf-ef566503d8df",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a webhook: failed\"] = false\n}\nelse {\n    tests[\"Create a webhook: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a webhook: cannot retreive webhook identifier\"] = false\n    }\n    else {\n        var webhookID = jsonData.id;\n        postman.setEnvironmentVariable(\"_webhook\", webhookID);\n        tests[\"Create a webhook: created with id:\" + webhookID] = true\n    }\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n      \"name\": \"Postman WebHook Test\",\n      \"resource\": \"messages\",\n      \"event\": \"created\",\n      \"targetUrl\": \"http:\/\/requestb.in\/pq8idjpq\",\n      \"filter\": \"roomId={{_room}}\"\n    }",
            "headers": "Content-Type: application\/json\nAuthorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "d1bfa5f5-66b6-d459-65ed-ee6ba5956c31",
            "name": "Get room details",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Shows details for a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get room details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get room details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get room details: cannot retreive room identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var roomId = jsonData.id;",
                            "        if (roomId != postman.getEnvironmentVariable(\"_room\")) {",
                            "            tests[\"Get room details: wrong id:\" + roomId] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get room details: correct id:\" + roomId] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "270e50ef-c194-3a60-00ff-b9c0b99db32b",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get room details: failed\"] = false;\n}\nelse {\n    tests[\"Get room details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get room details: cannot retreive room identifier\"] = false;\n    }\n    else {\n        var roomId = jsonData.id;\n        if (roomId != postman.getEnvironmentVariable(\"_room\")) {\n            tests[\"Get room details: wrong id:\" + roomId] = false;\n        }\n        else {\n            tests[\"Get room details: correct id:\" + roomId] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "d1f99432-bc92-8dd6-5bd3-d5f6b3b8ffd4",
            "name": "List memberships (for all rooms)",
            "url": "https:\/\/api.ciscospark.com\/v1\/memberships",
            "description": "Lists all room memberships. By default, lists memberships for rooms to which the authenticated user belongs.\n\nUse query parameters to filter the response.\n\nUse roomId to list memberships for a room, by ID.\n\nUse either personId or personEmail to filter the results.\n\nhttps:\/\/developer.webex.com\/endpoint-memberships-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List rooms: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List rooms: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "c22ec2c6-1100-4f22-214b-cb867a5a2b41",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List rooms: failed\"] = false;\n}\nelse {\n    tests[\"List rooms: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "de2b73c7-04ba-a4fb-2a78-5b5466d8200e",
            "name": "Get Team room details",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms\/{{_room}}",
            "description": "Shows details for a room, by ID.\r\n\r\nSpecify the room ID in the roomId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-roomId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get room details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get room details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get room details: cannot retreive room identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var roomId = jsonData.id;",
                            "        if (roomId != postman.getEnvironmentVariable(\"_room\")) {",
                            "            tests[\"Get room details: wrong id:\" + roomId] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get room details: correct id:\" + roomId] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            "    "
                        ]
                    }
                }
            ],
            "folder": "ecabe3dd-cf86-0fe7-39be-dfd8b2e937d9",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get room details: failed\"] = false;\n}\nelse {\n    tests[\"Get room details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get room details: cannot retreive room identifier\"] = false;\n    }\n    else {\n        var roomId = jsonData.id;\n        if (roomId != postman.getEnvironmentVariable(\"_room\")) {\n            tests[\"Get room details: wrong id:\" + roomId] = false;\n        }\n        else {\n            tests[\"Get room details: correct id:\" + roomId] = true;\n        }\n    }\n}\n    \n    ",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\n    \"name\": \"European Football Championship 2016\"\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "e050204b-171e-fa46-907f-c01b3f48a3e2",
            "name": "Delete a team membership",
            "url": "https:\/\/api.ciscospark.com\/v1\/team\/memberships\/{{_membership}}",
            "description": "Deletes a membership by ID.\r\n\r\nSpecify the membership ID in the membershipId URI parameter.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-teammemberships-membershipId-delete.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "DELETE",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 204) {",
                            "    tests[\"Delete a membership: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Delete a membership: success\"] = true",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 204) {\n    tests[\"Delete a membership: failed\"] = false\n}\nelse {\n    tests[\"Delete a membership: success\"] = true\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "e0d208fb-7a43-128f-3819-82eee5af2f7a",
            "name": "Create a message (html)",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages",
            "description": "HTML is not officially supported by the API, but will work in some cases\n\nTo get more info about message formatting, check https:\/\/developer.ciscospark.com\/formatting-messages.html\n\nhttps:\/\/developer.webex.com\/endpoint-messages-post.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                },
                {
                    "key": "Content-Type",
                    "value": "application\/json",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "POST",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Create a message: failed\"] = false",
                            "}",
                            "else {",
                            "    tests[\"Create a message: created\"] = true",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Create a message: cannot retreive identifier\"] = false",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        postman.setEnvironmentVariable(\"_message\", messageID);",
                            "        tests[\"Create a message: created with id:\" + messageID] = true",
                            "    }",
                            "}",
                            "    ",
                            "    ",
                            "    ",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Create a message: failed\"] = false\n}\nelse {\n    tests[\"Create a message: created\"] = true\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Create a message: cannot retreive identifier\"] = false\n    }\n    else {\n        var messageID = jsonData.id;\n        postman.setEnvironmentVariable(\"_message\", messageID);\n        tests[\"Create a message: created with id:\" + messageID] = true\n    }\n}\n    \n    \n    \n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"html\" : \"<p>Well as you know, HTML is not officially supported! Let's try it though ;-)<\/p><h1>Message Formatting!<\/h1><p>Webex Teams clients now render rich text; enabling bots and integrations to communicate business data in a way that's fun to read and easy on the eyes!<\/p><h2>Styling Text<\/h2><p>Messages are styled using <a href=\\\"https:\/\/daringfireball.net\/projects\/markdown\/syntax\\\" rel=\\\"nofollow\\\">Markdown<\/a> syntax allowing text to be emphasized in <strong>bold<\/strong>, <em>italics<\/em> on <code>in-line code<\/code>.<\/p><h3>Fenced Code Blocks<\/h3><p>Webex Teams clients can now also render fenced code blocks using triple backticks (aka GitHub Flavored Markdown)<\/p><pre><code>source 'https:\/\/github.com\/CocoaPods\/Specs.git'\\nplatform :ios, '8.0'\\nuse_frameworks!\\n\\npost_install do |installer|\\n  installer.pods_project.targets.each do |target|\\n    target.build_configurations.each do |config|\\n      config.build_settings['ENABLE_BITCODE'] = 'NO'\\n    end\\n  end\\nend\\n\\ntarget 'TeamsBnB' do\\n  pod 'TeamsSDK', :path =&gt; '..\/'\\n  pod 'Toast-Swift', '~&gt; 1.1.0'\\nend<\/code><\/pre><h3>Lists<\/h3><p>Lists are a great way to organize information or present options to your audience.<\/p><p>Orderd Lists<\/p><ol><li>List Item<\/li><li>List Item<\/li><li>List Item<\/li><\/ol><p>Unordered Lists<\/p><ul><li>List Item<\/li><li>List Item<\/li><li>List Item<\/li><\/ul><h3>Block Quotes<\/h3><blockquote><p>Quoting is a super powerful way for bots to respond to a message that happened a while back in the conversation.<\/p><\/blockquote><p><h3>Horizontal Lines<\/h3>well, as others, it's not officially supported, but pretty handy ;-)<hr><\/p>\",\r\n  \"text\": \"This text would be displayed by Webex Teams clients that do not support Markdown.\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\nContent-Type: application\/json\n",
            "pathVariables": []
        },
        {
            "id": "e6afcb06-d7d0-6288-9532-c42210151d43",
            "name": "List rooms",
            "url": "https:\/\/api.ciscospark.com\/v1\/rooms",
            "description": "List rooms.\r\n\r\nBy default, lists rooms to which the authenticated user belongs.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-rooms-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List rooms: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List rooms: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "270e50ef-c194-3a60-00ff-b9c0b99db32b",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List rooms: failed\"] = false;\n}\nelse {\n    tests[\"List rooms: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "ea4a789e-cc8c-35f1-452b-0fbed661c4ae",
            "name": "List team memberships",
            "url": "https:\/\/api.ciscospark.com\/v1\/team\/memberships?teamId={{_team}}",
            "description": "Lists all team memberships. By default, lists memberships for teams to which the authenticated user belongs.\r\n\r\nUse query parameters to filter the response.\r\n\r\nUse teamId to list memberships for a team, by ID.\r\n\r\nUse either personId or personEmail to filter the results.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-teammemberships-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "teamId",
                    "value": "{{_team}}",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List rooms: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List rooms: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "fca7a5be-0d35-7603-35ba-3a06267fa8d1",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List rooms: failed\"] = false;\n}\nelse {\n    tests[\"List rooms: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "f6d6e2c7-0e2a-a340-0c0d-69079f3779b0",
            "name": "List messages",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages?roomId={{_room}}",
            "description": "Lists all messages in a room. If present, includes the associated media content attachment for each message.\r\n\r\nThe list sorts the messages in descending order by creation date.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-messages-get.html",
            "data": [],
            "dataMode": "params",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "roomId",
                    "value": "{{_room}}",
                    "equals": true,
                    "description": "",
                    "enabled": true
                }
            ],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"List messages: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"List messages: success\"] = true;",
                            "}"
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"List messages: failed\"] = false;\n}\nelse {\n    tests[\"List messages: success\"] = true;\n}",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        },
        {
            "id": "fd3f0b6b-9d10-016b-8f4f-5358d1fdf443",
            "name": "Get message details",
            "url": "https:\/\/api.ciscospark.com\/v1\/messages\/{{_message}}",
            "description": "Shows details for a message, by message ID.\n\nSpecify the message ID in the messageId parameter in the URI.\n\nhttps:\/\/developer.webex.com\/endpoint-messages-messageId-get.html",
            "data": [],
            "dataMode": "raw",
            "headerData": [
                {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}",
                    "description": "",
                    "enabled": true
                }
            ],
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text\/javascript",
                        "exec": [
                            "if (responseCode.code != 200) {",
                            "    tests[\"Get message details: failed\"] = false;",
                            "}",
                            "else {",
                            "    tests[\"Get message details: success\"] = true;",
                            "",
                            "    var jsonData = JSON.parse(responseBody);",
                            "    if (jsonData.id === undefined) {",
                            "        tests[\"Get message details: cannot retreive identifier\"] = false;",
                            "    }",
                            "    else {",
                            "        var messageID = jsonData.id;",
                            "        if (messageID != postman.getEnvironmentVariable(\"_message\")) {",
                            "            tests[\"Get message details: wrong id:\" + messageID] = false;",
                            "        }",
                            "        else {",
                            "            tests[\"Get message details: correct id:\" + messageID] = true;",
                            "        }",
                            "    }",
                            "}",
                            "    ",
                            ""
                        ]
                    }
                }
            ],
            "folder": "b7b1a0a1-a988-2da2-0da0-1b3f742242e7",
            "preRequestScript": null,
            "tests": "if (responseCode.code != 200) {\n    tests[\"Get message details: failed\"] = false;\n}\nelse {\n    tests[\"Get message details: success\"] = true;\n\n    var jsonData = JSON.parse(responseBody);\n    if (jsonData.id === undefined) {\n        tests[\"Get message details: cannot retreive identifier\"] = false;\n    }\n    else {\n        var messageID = jsonData.id;\n        if (messageID != postman.getEnvironmentVariable(\"_message\")) {\n            tests[\"Get message details: wrong id:\" + messageID] = false;\n        }\n        else {\n            tests[\"Get message details: correct id:\" + messageID] = true;\n        }\n    }\n}\n    \n",
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "fe983448-e2ff-d578-f4c4-8223175c32c2",
            "rawModeData": "{\r\n  \"roomId\" : \"{{_room}}\",\r\n  \"text\" : \"This is a plain text message\"\r\n}",
            "headers": "Authorization: Bearer {{access_token}}\n",
            "pathVariables": []
        }
    ]
}